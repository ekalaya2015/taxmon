"""initial

Revision ID: 1c49e8b2ed76
Revises: 
Create Date: 2022-06-16 09:18:11.935134

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = "1c49e8b2ed76"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("username", sa.VARCHAR(), nullable=True),
        sa.Column("nik", sa.VARCHAR(), nullable=True),
        sa.Column("role", sa.Enum("admin", "merchant", name="role"), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column(
            "hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("address", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("nik"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "device",
        sa.Column("name", sa.VARCHAR(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("created", "inactive", "active", "off", "on", name="status"),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("user_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("lat", sa.Float(), nullable=True),
        sa.Column("lon", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "invoice",
        sa.Column("invoice_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("invoice_num", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("device_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("tax_value", sa.Numeric(precision=15, scale=2), nullable=True),
        sa.Column("total_value", sa.Numeric(precision=15, scale=2), nullable=True),
        sa.ForeignKeyConstraint(
            ["device_name"],
            ["device.name"],
        ),
        sa.ForeignKeyConstraint(
            ["username"],
            ["user.username"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("invoice")
    op.drop_table("device")
    op.drop_table("user")
    # ### end Alembic commands ###
